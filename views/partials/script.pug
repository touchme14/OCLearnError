//  Fonts and icons 
script(src="../assets/js/plugin/webfont/webfont.min.js")
script.
  
  WebFont.load({
  			google: {"families":["Lato:300,400,700,900"]},
  			custom: {"families":["Flaticon", "Font Awesome 5 Solid", "Font Awesome 5 Regular", "Font Awesome 5 Brands", "simple-line-icons"], urls: ['../assets/css/fonts.min.css']},
  			active: function() {
  				sessionStorage.fonts = true;
  			}
  		});
  
//  CSS Files 
link(rel="stylesheet", href="../assets/css/bootstrap.min.css")
link(rel="stylesheet", href="../assets/css/atlantis.min.css")
//  CSS Just for demo purpose, don't include it in your project 
link(rel="stylesheet", href="../assets/css/demo.css")
//    Core JS Files   
script(src="../assets/js/core/jquery.3.2.1.min.js")
script(src="../assets/js/core/popper.min.js")
script(src="../assets/js/core/bootstrap.min.js")
//  jQuery UI 
script(src="../assets/js/plugin/jquery-ui-1.12.1.custom/jquery-ui.min.js")
script(src="../assets/js/plugin/jquery-ui-touch-punch/jquery.ui.touch-punch.min.js")
//  jQuery Scrollbar 
script(src="../assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js")
//  Chart JS 
script(src="../assets/js/plugin/chart.js/chart.min.js")
//  jQuery Sparkline 
script(src="../assets/js/plugin/jquery.sparkline/jquery.sparkline.min.js")
//  Chart Circle 
script(src="../assets/js/plugin/chart-circle/circles.min.js")
//  Datatables 
script(src="../assets/js/plugin/datatables/datatables.min.js")
//  Bootstrap Notify 
script(src="../assets/js/plugin/bootstrap-notify/bootstrap-notify.min.js")
//  jQuery Vector Maps 
script(src="../assets/js/plugin/jqvmap/jquery.vmap.min.js")
script(src="../assets/js/plugin/jqvmap/maps/jquery.vmap.world.js")
//  Sweet Alert 
script(src="../assets/js/plugin/sweetalert/sweetalert.min.js")
//  Atlantis JS 
script(src="../assets/js/atlantis.min.js")
//  Atlantis DEMO methods, don't include it in your project! 
script(src="../assets/js/setting-demo.js")
script(src="../assets/js/demo.js")
script.
  
  Circles.create({
  			id:'circles-1',
  			radius:45,
  			value:60,
  			maxValue:100,
  			width:7,
  			text: 5,
  			colors:['#f1f1f1', '#FF9E27'],
  			duration:400,
  			wrpClass:'circles-wrp',
  			textClass:'circles-text',
  			styleWrapper:true,
  			styleText:true
  		})
  
  		Circles.create({
  			id:'circles-2',
  			radius:45,
  			value:70,
  			maxValue:100,
  			width:7,
  			text: 36,
  			colors:['#f1f1f1', '#2BB930'],
  			duration:400,
  			wrpClass:'circles-wrp',
  			textClass:'circles-text',
  			styleWrapper:true,
  			styleText:true
  		})
  
  		Circles.create({
  			id:'circles-3',
  			radius:45,
  			value:40,
  			maxValue:100,
  			width:7,
  			text: 12,
  			colors:['#f1f1f1', '#F25961'],
  			duration:400,
  			wrpClass:'circles-wrp',
  			textClass:'circles-text',
  			styleWrapper:true,
  			styleText:true
  		})
  
  		var totalIncomeChart = document.getElementById('totalIncomeChart').getContext('2d');
  
  		var mytotalIncomeChart = new Chart(totalIncomeChart, {
  			type: 'bar',
  			data: {
  				labels: ["S", "M", "T", "W", "T", "F", "S", "S", "M", "T"],
  				datasets : [{
  					label: "Total Income",
  					backgroundColor: '#ff9e27',
  					borderColor: 'rgb(23, 125, 255)',
  					data: [6, 4, 9, 5, 4, 6, 4, 3, 8, 10],
  				}],
  			},
  			options: {
  				responsive: true,
  				maintainAspectRatio: false,
  				legend: {
  					display: false,
  				},
  				scales: {
  					yAxes: [{
  						ticks: {
  							display: false //this will remove only the label
  						},
  						gridLines : {
  							drawBorder: false,
  							display : false
  						}
  					}],
  					xAxes : [ {
  						gridLines : {
  							drawBorder: false,
  							display : false
  						}
  					}]
  				},
  			}
  		});
  
  		$('#lineChart').sparkline([105,103,123,100,95,105,115], {
  			type: 'line',
  			height: '70',
  			width: '100%',
  			lineWidth: '2',
  			lineColor: '#ffa534',
  			fillColor: 'rgba(255, 165, 52, .14)'
  		});
script.
  
  document.addEventListener('DOMContentLoaded', () => {
      const currentPath = window.location.pathname; // Mendapatkan URL aktif
      const navItems = document.querySelectorAll('.sidebar .nav .nav-item a'); // Semua link sidebar
  
      navItems.forEach(link => {
        if (link.getAttribute('href') === currentPath) {
          link.parentElement.classList.add('active'); // Tambahkan kelas active ke elemen <li>
        } else {
          link.parentElement.classList.remove('active'); // Hapus kelas active jika tidak cocok
        }
      });
    });
  
